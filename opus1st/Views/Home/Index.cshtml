@model IEnumerable<Product>
@{
    ViewData["Title"] = "Index";
}

<div class="row">
    <div class="col-12">

        <div class="card text-dark bg-light mb-3" style="box-shadow:0px 0px 5px #999;" >
          <div class="card-header">
              <h1>Products</h1>
              <div class="d-flex justify-content-end mb-1">
                <a class="btn btn-success btn-sm" asp-controller="Home" asp-action="Add">
                    Create New
                </a>
              </div>
          </div>
          <div class="card-body">
            <table class="table table-sm table-striped table-hover text-center">
            <thead class="h5">
                <tr>
                    <th>Name</th>
                    
                    <th>Price</th>
                    <th>Action</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var p in Model)
                {
                    <tr>
                        <td>@p.ProductName</td>
                        
                        <td>@p.Price</td>
                        <td>
                            <a class="btn btn-info btn-sm" asp-controller="Home" asp-action="Edit" asp-route-id="@p.Id">
                            Edit
                            </a>
                            <a id="Deletebtn" class="btn btn-danger btn-sm" asp-controller="Home" asp-action="Delete" asp-route-id="@p.Id">
                            Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
          </div>
        </div>

     
        
        
    </div>
</div>
@section scripts{
    <script>
        Swal.fire({
            title: 'Submit your Github username',
            input: 'text',
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: 'Look up',
            showLoaderOnConfirm: true,
            preConfirm: (login) => {
                return fetch(`//api.github.com/users/${login}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(response.statusText)
                        }
                        return response.json()
                    })
                    .catch(error => {
                        Swal.showValidationMessage(
                            `Request failed: ${error}`
                        )
                    })
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    title: `${result.value.login}'s avatar`,
                    imageUrl: result.value.avatar_url
                })
            }
        })
        $("#Deletebtn").click(function (e) {
            var result = window.confirm('Are you sure to Delete?');
            if (result == false) {
                e.preventDefault();
            };
        });
    </script>
}

